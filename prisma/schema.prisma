// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(uuid())
  name        String
  description String
  date        DateTime
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  spots       Spot[]
}

model Spot {
  id                   String               @id @default(uuid())
  name                 String
  status               SpotStatus           @default(available)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  eventId              String
  event                Event                @relation(fields: [eventId], references: [id])
  ticket               Ticket?
  reservationHistories ReservationHistory[]
}

enum SpotStatus {
  available
  reserved
}

model Ticket {
  id         String     @id @default(uuid())
  email      String
  ticketKind TicketKind
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  spotId     String
  spot       Spot       @relation(fields: [spotId], references: [id])

  @@unique([spotId])
}

model ReservationHistory {
  id         String       @id @default(uuid())
  email      String
  ticketKind TicketKind
  status     TicketStatus @default(reserved)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  spotId     String
  spot       Spot         @relation(fields: [spotId], references: [id])

  @@unique([spotId])
}

enum TicketKind {
  full
  half
}

enum TicketStatus {
  reserved
  canceled
}
